# -*- coding: utf-8 -*-
"""MLP.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1juvQ9iOfODCNdleyW3JvQ18HIFPRk-Dn
"""

import numpy as np
import pandas as pd

# Load data 
data=pd.read_csv('HR_comma_sep.csv')

data.head()

#import LabelEncoder
from sklearn import preprocessing

# Creating LabelEncoder
le= preprocessing.LabelEncoder()

# converting string Labels into numbers
data['salary']=le.fit_transform(data['salary'])
data['sales']=le.fit_transform(data['sales'])

print(data['salary'])
print(data['sales'])

#spliting data into feature and
x=data[['satisfaction_level','last_evaluation','number_project','average_montly_hours','time_spend_company','Work_accident','promotion_last_5years','sales','salary']]
y=data['left']

#import train_test_split function
from sklearn.model_selection import train_test_split

#split dataset into training set and test set
x_train, x_test, y_train, y_test= train_test_split(x,y,test_size=0.3,random_state=42)  #70% train and 30% test

print(x_train)
# similarly we can try for x_test,y_train, y_test

# Import MLPClassifer
from sklearn.neural_network import MLPClassifier

# Create model object
clf = MLPClassifier(hidden_layer_sizes=(8,5),
 random_state=5,
verbose=True,
 learning_rate_init=0.01)

# Fit data onto the model
clf.fit(x_train,y_train)

# make prediction on test dataset 
ypred=clf.predict(x_test)

#import accuracy score
from sklearn.metrics import accuracy_score

#calculate accuracy
accuracy_score(y_test,ypred)