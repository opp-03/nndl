# -*- coding: utf-8 -*-
"""dlr.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UtLZL4dsSaYpeBdJ13D-8i_J3--cxp7K
"""

import numpy as np
import pandas as pd
import sympy

w=np.array([1,-1,0,0.5]).transpose()
xi=[np.array([1,-2,0,-1]).transpose(),np.array([0,1.5,-0.5,-1]).transpose(),np.array([-1,1,0.5,-1]).transpose()]
c=0.1
d=[-1,-1,1]
i=0
print(w)
print(xi)
print(d)

x=sympy.Symbol('x')
y=((2/(1+sympy.exp(-x)))-1)
yprime=y.diff(x) # get derivative
print(yprime)  # print derivative

for i in range (len(xi)):
    net=sum(w.transpose()*xi[i])
    print('Aggregationm output:',round(net,3))
    o=y.subs(x,net).evalf()
    print(round(0,3))
    fdashnet_value=yprime.subs(x,net).evalf()
    print(round(fdashnet_value,3))
    dw=c*(d[i]-o)*xi[i]*fdashnet_value
    #print(dw)
    w=w+dw
    print ('Weight Vector For This Iteration:',w)
    i+=1